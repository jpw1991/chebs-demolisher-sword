name: Publish package

on:
  release:
    types: [published] # run when a new release is published
  workflow_run:
    workflows: ["build"] # run if build.yml is successfully completed
    types:
      - completed

env:
  name: ChebsDemolisherSword
  jsonf: manifest.json
  dlpath: https://github.com/jpw1991/chebs-demolisher-sword/releases/download
  dependencies: "ValheimModding-Jotunn@2.15.0" # dependencies separated by spaces
  categories: "Mods" # categories separated by spaces
  namespace: ChebGonaz

jobs:
  check_release_tag:
    runs-on: ubuntu-latest
    steps:
      - name: Check release tag
        run: |
          if [[ "${{ github.event.release.tag_name }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Valid release tag. Continue with the workflow."
          else
            echo "Invalid release tag. Exiting gracefully."
            exit 0  # Exit without an error
          fi
  verify_manifest:
    runs-on: ubuntu-latest
    needs: check_release_tag
    steps:
      - uses: actions/checkout@v3
      - name: Check that version matches
        run: |
          versionwithoutv=$(echo ${{github.event.release.tag_name}} | cut -d 'v' -f 2)
          if [[ "$(jq -r '.version_number' $(find ./${{env.name}}/Package -name ${{env.jsonf}}))" != $versionwithoutv ]]; then
            echo "::debug::${{github.event.release.tag_name}}"
            echo "::debug::$(cat $(find ./ -name ${{env.jsonf}}))"
            echo "::error::Version in ${{env.jsonf}} does not match tag version"
            exit 1
          fi
          echo "VERSION=${versionwithoutv}" >> $GITHUB_ENV
      - name: Get Description
        id: get_description
        run: |
          description=$(jq -r '.description' $(find ./${{env.name}}/Package -name ${{env.jsonf}}))
          echo "DESCRIPTION=${description}" >> $GITHUB_ENV
  publish:
    runs-on: ubuntu-latest
    needs: verify_manifest
    steps:
      - uses: actions/checkout@v3
      - run: wget ${{env.dlpath}}/${{github.ref_name}}/${{env.name}}.${{env.VERSION}}.zip
      - name: Upload Thunderstore Package
        uses: GreenTF/upload-thunderstore-package@v4
        with:
          community: valheim
          namespace: ${{env.namespace}}
          name: ${{env.name}}
          version: ${{env.VERSION}}
          description: ${{env.DESCRIPTION}}
          token: ${{secrets.TS_KEY}}
          deps: ${{env.dependencies}}
          categories: ${{env.categories}}
          file: ${{env.name}}.${{env.VERSION}}.zip
